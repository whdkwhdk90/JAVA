[객체배열 실습]

<문제 1>
 - 클래스 복사해 옴 : com.silsub2.person.model.vo.Person.java
 - 테스트용 클래스 작성 : com.silsub2.person.controller.TestPersonArray.java
		=> main() 메소드 포함함
 - main() 에서 구현할 내용
	1. Person 클래스에 대한 객체 배열 5개 선언함
	2. 키보드로 5 사람의 정보를 입력받아, 각 객체에 기록함
	3. 출력 확인함
	4. 5명의 나이, 키, 몸무게의 평균을 구하여 각각 출력함



<문제 2>
 - 클래스 : com.silsub2.student.model.vo.Student.java
 - 필드 : 학년, 반, 이름, 국어점수, 영어점수, 수학점수

 - 테스트용 클래스 작성 : com.silsub2.student.controller.TestStudentArray.java
		=> main() 메소드 포함함
 - main() 에서 구현할 내용
	1. 최대 10명의 학생 정보를 기록할 수 있게 배열 할당함
	2. 학생 정보가 한명씩 추가될 때 마다 카운트함
		=> while() 문 사용함
		   계속 추가할 것인지 물어보고, 대소문자 상관없이 'y'이면
		   계속 객체 추가하고 키보드로 값 입력받아 기록함.
	3. 키보드로 3명의 학생 정보를 입력받아, 각 객체에 저장함
	4. 현재 입력된 학생들의 점수의 평균을 구하여 출력함
	5. 현재 기록된 학생들의 정보를 모두 출력함


<문제 3> -제외
 - 클래스 복사해 옴 : com.silsub2.book.model.Book.java
 - 테스트용 클래스 : com.silsub2.book.run.Run.java
		=> main() 메소드 포함함
	1. BookManager 클래스에 대한 객체 디폴트 생성함
	2. menu() 메소드 실행함

 - 관리용 클래스 : com.silsub2.book.controller.BookManager.java
	1. Field 선언
	- bar : Book[] //null 로 초기화 명시함
	~ sc : Scanner
	- count : int	//현재 추가된 객체 수 : static

	2. 초기화블럭 작성
		: 10개의 Book 배열 할당함

	3. menu() 메소드 작성
		public void menu()
		=> do~while 문으로 반복 실행 처리함

	<메뉴 화면>
	***** 도서 관리 메뉴 *****

	1. 도서 정보 추가	//선택시 bookInput() 메서드 실행함
	2. 모두 출력	//선택시 bookAllOutput() 메서드 실행함
	7. 끝내기		//main() 으로 return함

	4. bookInput() 메서드 작성함
		public void bookInput()
		=> 새로운 도서 정보 기록을 위한 객체 생성하고
		   현재 인덱스에 주소 저장함
		=> 생성자에서 객체 수 카운트 1증가함
		=> 키보드로 도서 정보 입력받아 객체에 기록함

	5. bookAllOutput() 메서드 작성함
		public void bookAllOutput()
		=> 현재까지 카운트된 도서 정보 모두 출력함

