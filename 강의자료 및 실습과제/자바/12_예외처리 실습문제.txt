[예외처리 실습문제]
 - 패키지명 : silsub

<문제 1>
 1. 사용자 정의 예외클래스 만들기
	클래스명 : com.silsub1.exception.CharCheckException.java
	구현 : Exception 클래스를 상속받아 구현한다.

 2. 클래스 만들기
	클래스명 : com.silsub1.controller.CharacterProcess.java
	디폴트 생성자

	메소드
	public void countAlpha(String s) throws CharCheckException{}
	//전달된 문자열값에서 영문자가 몇개인지 카운트하고
	//ConsoleIO 클래스의 output()메소드로 문자열과 카운트한 숫자 전달

	//단, 공백문자가 있으면, CharCheckException 발생
	
	//에러메시지 : "체크할 문자열 안에 공백 포함할 수 없습니다." 출력함


	클래스명 : com.silsub1.view.ConsoleIO.java

	public void charInput(){}
	//키보드로 입력받아 문자열을 CharacterProcess 클래스의 countAlpha로 전달하는 메소드
	
	(BufferedReader 사용하여 try-catch구문으로 작성할 것) 

	public void charOutput(String s, int count){}
	//문자열과 영문자 수를 매개변수로 입력 받아
	//수행 결과를 돌려받아 출력하는 메소드

 3. 실행용 클래스 : com.silsub1.run.Run.java (main 포함)
	ConsoleIO 클래스의 charInput 메소드 호출
	
	

<문제 2>

 
 1. 사용자 정의 예외클래스 만들기
	클래스명 : com.silsub1.exception.NumberRangeException.java 추가
	구현 : Exception 클래스를 상속받아 구현한다.
 2. 

클래스명 : com.silsub1.view.ConsoleIO.java

	public void numberInput(){}
	//키보드로 두 개의 정수를 입력받아 NumberProcess 클래스의 checkDouble()로 전달하는 메소드
	
	(BufferedReader 사용하여 try-catch구문으로 작성할 것) 

	public void charOutput(boolean isTrue){}
	//매개변수로 논리값을 전달 받아
	//결과를 출력하는 메소드

클래스명 : com.silsub1.controller.NumberProcess.java
	디폴트 생성자

	메소드
	public boolan checkDouble(int a, int b){}
	// 임의의 정수 두개를 BufferedReader로 입력받아, 첫번째 수가 두번째수의 배수인지 확인하고
	//ConsoleIO의 numberOutput()메소드로 배수가 맞으면 true, 배수가 아니면 false를 전달함

	//단, 첫번째와 두번째 수가 1~100사이의 값이 아니면
	//NumberRangeException 발생시킴
	//에러메시지 : "1부터 100사이의 값이 아닙니다."
	

 3. 실행용 클래스 : com.silsub1.run.Run.java (main 포함)
	ConsoleIO 클래스의 numberInput 메소드 호출


