
----------------------------------------------------------------------------------------------------------------

UML 다이어그램 : 통합 모델링 언어를 이용해 시스템 상호작용, 업무흐름, 시스템 구조, 컴포넌트 관계 등을 그린 도면.

장점 :  1) 프로젝트의 흐름을 알기 쉬움
	2) 눈으로 보기 쉽게 만들어져서 전문가가 아니더라도 이해하기 쉽다.
	3) 백엔드에서 정리, 기초를 마련할 수 있는 문서로 제격이다.

종류
1) Use Case 다이어그램 : 요구 분석 과정에서 시스템과 외부와의 상호 작용을 묘사함
2) Activity 다이어그램 : 업무의 흐름을 모델링하거나 객체의 생명주기를 표현함
3) Sequence 다이어그램 : 객체 간의 메세지 전달을 시간적 흐름을 기준으로 분석함
4) Collaboration 다이어그램 : 객체와 객체가 주고받는 메세지 중심으로 작성함
5) Class 다이어그램 : 시스템의 구조적인 모습을 그림
6) Component 다이어그램 : 소프트웨어 구조를 그림
7) Deploy 다이어그램 : 기업 환경의 구성과 컴포넌트 간의 관계를 그림

Use Case 다이어그램

구성

1) 시스템 : 만들고자 하는 프로그램

2) 액터 : 시스템의 외부에 있고 시스템과 상호작용을 하는 사람 or 시스템

3) 유스케이스 : 사용자 입장에서 바라본 시스템의 기능

4) 관계 : 액터와 유스케이스 간 관계. 종류는 일반화, 연관, 의존(의존은 포함 or 확장으로 나뉨).

1] 연관 관계 : 실선 연결
2] 일반화 관계 : 화살표가 달린 실선(화살표 방향 : 구체적인 유스케이스 -> 추상적인 유스케이스)
3] 포함 관계 : 하나의 유스케이스가 다른 유스케이스의 실행을 전제로 할 때 형성되는 관계
(화살표 방향 : 기능을 포함하는 유스케이스 -> 기능에 포함되는 유스케이스)  ===> 영어는 <<include>>를 사용
4] 확장 관계 : 확장 기능 유스케이스와 확장 대상 유스케이스 사이에 형성 되는 관계
(화살표 방향 : 확장 기능 유스케이스 -> 확장 대상 유스케이스)   ===> 영어는 <<extend>> 를 사용.

batch : 특정 시간이 지나면 실행되는 프로그램




